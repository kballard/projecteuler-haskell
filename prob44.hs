-- Pentagonal numbers are generated by the formula, P_n=n(3n1)/2. The first ten
-- pentagonal numbers are:
--
--                1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
--
-- It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their
-- difference, 70 - 22 = 48, is not pentagonal.
--
-- Find the pair of pentagonal numbers, P_j and P_k, for which their sum and
-- difference is pentagonal and D = |P_k - P_j| is minimised; what is the value
-- of D?
--

import Control.Monad
import Control.Monad.Instances

pentagonals :: [Int]
pentagonals = map p [1..]
  where p n = n*(3*n-1) `quot` 2

isPentagonal :: Int -> Bool
{-isPentagonal n = elem n $ takeWhile (<=n) pentagonals-}
isPentagonal p = isIntegral n
  where n = ((1/2) + sqrt (1/4 + 6*fromIntegral p)) / 3
        isIntegral = (==0) . snd . properFraction

-- pairs of pentagonals who's sum and difference are pentagonal
pairs :: [(Int,Int)]
pairs = filter filt [(j, k) | j <- tail pentagonals, k <- takeWhile (<j) pentagonals]
  where filt = liftM2 (&&) (isPentagonal . uncurry (+)) (isPentagonal . uncurry (-))

main = do
  let (j,k) = head pairs
  print $ abs (j-k)
